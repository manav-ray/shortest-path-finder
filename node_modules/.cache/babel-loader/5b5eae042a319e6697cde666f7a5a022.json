{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport Node from './Node';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    initGrid(50, 50);\n  }, []);\n  /**\n   * Initializes an empty grid.\n   * \n   * @param {*} rows \n   * @param {*} cols \n   */\n\n  const initGrid = (rows, cols) => {\n    const tempGrid = [];\n\n    for (let i = 0; i < rows; i++) {\n      const currRow = [];\n\n      for (let j = 0; j < cols; j++) {\n        currRow.push(new Point(i, j));\n      }\n\n      tempGrid.push(currRow);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}","map":{"version":3,"sources":["/Users/manavray/code/shortest-path-finder/src/components/Grid.js"],"names":["React","useEffect","useState","Node","grid","setGrid","initGrid","rows","cols","tempGrid","i","currRow","j","push","Point"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,YAAY;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAAC,EAAD,EAAK,EAAL,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA;AACJ;AACA;AACA;AACA;AACA;;AACI,QAAMA,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7B,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,IAAnB,EAAyBG,CAAC,EAA1B,EAA8B;AAC1B,YAAMC,OAAO,GAAG,EAAhB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,IAAnB,EAAyBI,CAAC,EAA1B,EAA8B;AAC1BD,QAAAA,OAAO,CAACE,IAAR,CAAa,IAAIC,KAAJ,CAAUJ,CAAV,EAAaE,CAAb,CAAb;AACH;;AAEDH,MAAAA,QAAQ,CAACI,IAAT,CAAcF,OAAd;AACH;AACJ,GAXD;;AAaA,sBACI,qCADJ;AAKH","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Node from './Node';\n\nexport default function () {\n\n    const [grid, setGrid] = useState([]);\n\n    useEffect(() => { \n        initGrid(50, 50);\n    }, [])\n\n    \n    /**\n     * Initializes an empty grid.\n     * \n     * @param {*} rows \n     * @param {*} cols \n     */\n    const initGrid = (rows, cols) => {\n        const tempGrid = [];\n\n        for(let i = 0; i < rows; i++) {\n            const currRow = [];\n            for(let j = 0; j < cols; j++) {\n                currRow.push(new Point(i, j));\n            }   \n\n            tempGrid.push(currRow);\n        }\n    }\n    \n    return (\n        <>\n\n        </>    \n    )\n}"]},"metadata":{},"sourceType":"module"}