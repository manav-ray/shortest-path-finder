{"ast":null,"code":"export class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.isStart = false;\n    this.isEnd = false;\n    this.distance = Infinity;\n    this.isVisited = false;\n    this.previous = null;\n\n    this.setPrevious = point => {\n      this.previous = point;\n    };\n\n    this.setStart = boolean => {\n      this.isStart = boolean;\n    };\n\n    this.setEnd = boolean => {\n      this.isEnd = boolean;\n    };\n\n    this.setDistance = newDistance => {\n      this.distance = newDistance;\n    };\n\n    this.setVisited = boolean => {\n      this.isVisited = boolean;\n    };\n\n    this.equals = comparePoint => {\n      return this.x === comparePoint.x && this.y === comparePoint.y;\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/manavray/code/shortest-path-finder/src/Objects/Point.js"],"names":["Point","constructor","x","y","isStart","isEnd","distance","Infinity","isVisited","previous","setPrevious","point","setStart","boolean","setEnd","setDistance","newDistance","setVisited","equals","comparePoint"],"mappings":"AAAA,OAAO,MAAMA,KAAN,CAAY;AAEfC,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACd,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKC,QAAL,GAAgBC,QAAhB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA,SAAKC,WAAL,GAAoBC,KAAD,IAAW;AAC1B,WAAKF,QAAL,GAAgBE,KAAhB;AACH,KAFD;;AAIA,SAAKC,QAAL,GAAiBC,OAAD,IAAa;AACzB,WAAKT,OAAL,GAAeS,OAAf;AACH,KAFD;;AAIA,SAAKC,MAAL,GAAeD,OAAD,IAAa;AACvB,WAAKR,KAAL,GAAaQ,OAAb;AACH,KAFD;;AAIA,SAAKE,WAAL,GAAoBC,WAAD,IAAiB;AAChC,WAAKV,QAAL,GAAgBU,WAAhB;AACH,KAFD;;AAIA,SAAKC,UAAL,GAAmBJ,OAAD,IAAa;AAC3B,WAAKL,SAAL,GAAiBK,OAAjB;AACH,KAFD;;AAIA,SAAKK,MAAL,GAAeC,YAAD,IAAkB;AAC5B,aAAO,KAAKjB,CAAL,KAAWiB,YAAY,CAACjB,CAAxB,IAA6B,KAAKC,CAAL,KAAWgB,YAAY,CAAChB,CAA5D;AACH,KAFD;AAGH;;AAlCc","sourcesContent":["export class Point {\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.isStart = false;\n        this.isEnd = false;\n        this.distance = Infinity;\n        this.isVisited = false;\n        this.previous = null;\n\n        this.setPrevious = (point) => {\n            this.previous = point;\n        }\n\n        this.setStart = (boolean) => {\n            this.isStart = boolean;\n        }\n\n        this.setEnd = (boolean) => {\n            this.isEnd = boolean;\n        }\n\n        this.setDistance = (newDistance) => {\n            this.distance = newDistance;\n        }\n\n        this.setVisited = (boolean) => {\n            this.isVisited = boolean;\n        }\n\n        this.equals = (comparePoint) => {\n            return this.x === comparePoint.x && this.y === comparePoint.y;\n        }\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}