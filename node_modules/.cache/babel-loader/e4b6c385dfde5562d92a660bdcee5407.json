{"ast":null,"code":"var _jsxFileName = \"/Users/manavray/code/shortest-path-finder/src/components/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Point } from './../Objects/Point';\nimport Node from './Node';\nimport { Button, Modal } from 'react-bootstrap';\nimport './../main.css';\nimport { breadthFirstSearch } from './../algorithms/bfs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid() {\n  _s();\n\n  const [grid, setGrid] = useState([]);\n  const [numSpecials, setNumSpecials] = useState(0);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    initGrid(30, 80);\n  }, []);\n  /**\n   * Initializes an empty grid.\n   * \n   * @param {*} rows # of rows\n   * @param {*} cols # of columns.\n   */\n\n  const initGrid = (rows, cols) => {\n    const tempGrid = [];\n\n    for (let i = 0; i < rows; i++) {\n      const currRow = [];\n\n      for (let j = 0; j < cols; j++) {\n        currRow.push(new Point(i, j));\n      }\n\n      tempGrid.push(currRow);\n    }\n\n    setGrid(tempGrid);\n  };\n  /**\n   * Calls and visualizes the breadth first search algorithm.\n   */\n\n\n  const bfs = () => {\n    var startPoint = null;\n    var endPoint = null;\n\n    for (let i = 0; i < grid.length; i++) {\n      for (let j = 0; j < grid[i].length; j++) {\n        if (grid[i][j].isStart) {\n          startPoint = grid[i][j];\n        } else if (grid[i][j].isEnd) {\n          endPoint = grid[i][j];\n        }\n      }\n    }\n\n    if (startPoint === null || endPoint === null) {\n      handleShow();\n      return;\n    }\n\n    const pointsInOrder = breadthFirstSearch(startPoint, endPoint, grid); // console.log(pointsInOrder);\n\n    for (let k = 0; k < pointsInOrder.length; k++) {\n      const currPoint = pointsInOrder[k]; // console.log(grid[currPoint.x][currPoint.y]);\n\n      const htmlGrid = document.getElementsByClassName(\"rowContainer\");\n      htmlGrid[0].style = \"background-color: blue\"; // htmlGrid[0].style = \"background-color: blue\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pathfinding Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginBottom: '15px',\n        marginRight: '10px'\n      },\n      onClick: () => window.location.reload(false),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginBottom: '15px'\n      },\n      onClick: bfs,\n      children: \"Breadth First Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: grid.map((row, rowId) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rowContainer\",\n          children: row.map((col, colId) => {\n            return /*#__PURE__*/_jsxDEV(Node, {\n              point: grid[rowId][colId],\n              numSpecials: numSpecials,\n              setNumSpecials: setNumSpecials\n            }, colId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this);\n          })\n        }, rowId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Illegal grid state. Please specify a start and end point.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"V78qz+mDVUVJLHM7jDW1Mg2qBdA=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/manavray/code/shortest-path-finder/src/components/Grid.js"],"names":["React","useEffect","useState","Point","Node","Button","Modal","breadthFirstSearch","Grid","grid","setGrid","numSpecials","setNumSpecials","show","setShow","handleClose","handleShow","initGrid","rows","cols","tempGrid","i","currRow","j","push","bfs","startPoint","endPoint","length","isStart","isEnd","pointsInOrder","k","currPoint","htmlGrid","document","getElementsByClassName","style","marginBottom","marginRight","window","location","reload","map","row","rowId","col","colId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Point} from './../Objects/Point';\nimport Node from './Node';\nimport {Button, Modal} from 'react-bootstrap';\nimport './../main.css'\nimport {breadthFirstSearch} from './../algorithms/bfs';\n\nexport default function Grid () {\n\n    const [grid, setGrid] = useState([]);\n    const [numSpecials, setNumSpecials] = useState(0);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    useEffect(() => { \n        initGrid(30, 80);\n    }, [])\n\n    \n    /**\n     * Initializes an empty grid.\n     * \n     * @param {*} rows # of rows\n     * @param {*} cols # of columns.\n     */\n    const initGrid = (rows, cols) => {\n        const tempGrid = [];\n\n        for(let i = 0; i < rows; i++) {\n            const currRow = [];\n            for(let j = 0; j < cols; j++) {\n                currRow.push(new Point(i, j));\n            }   \n\n            tempGrid.push(currRow);\n        }\n\n        setGrid(tempGrid);\n    }\n\n\n    /**\n     * Calls and visualizes the breadth first search algorithm.\n     */\n    const bfs = () => { \n        var startPoint = null;\n        var endPoint = null;\n\n        for(let i = 0; i < grid.length; i++) {\n            for(let j = 0; j < grid[i].length; j++) {\n                if (grid[i][j].isStart) {\n                    startPoint = grid[i][j];\n                }\n                else if(grid[i][j].isEnd) {\n                    endPoint = grid[i][j];\n                }\n            }\n        }\n\n        if(startPoint === null || endPoint === null) {\n            handleShow();\n            return;\n        }\n\n        const pointsInOrder = breadthFirstSearch(startPoint, endPoint, grid);\n        // console.log(pointsInOrder);\n        for(let k = 0; k < pointsInOrder.length; k++) {\n            const currPoint = pointsInOrder[k];\n            // console.log(grid[currPoint.x][currPoint.y]);\n            const htmlGrid = document.getElementsByClassName(\"rowContainer\");\n            htmlGrid[0].style = \"background-color: blue\";\n            // htmlGrid[0].style = \"background-color: blue\";\n        }\n    }\n    \n    return (\n        <div className=\"container\">\n            <h1>Pathfinding Visualizer</h1>\n            <br/>\n            <Button style={{marginBottom: '15px', marginRight: '10px'}} onClick={() => window.location.reload(false)}>Reset</Button>\n            <Button style={{marginBottom: '15px'}} onClick={bfs}>Breadth First Search</Button>\n            <div>\n                {grid.map((row, rowId) => {\n                    return (\n                        <div key={rowId} className=\"rowContainer\">\n                            {row.map((col, colId) => {\n                                return (\n                                    <Node key={colId} point={grid[rowId][colId]} numSpecials={numSpecials} setNumSpecials={setNumSpecials} />\n                                )\n                            })}\n                        </div>\n                    )\n                    })}\n            </div>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                </Modal.Header>\n                <Modal.Body>Illegal grid state. Please specify a start and end point.</Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>    \n    )\n}"]},"metadata":{},"sourceType":"module"}